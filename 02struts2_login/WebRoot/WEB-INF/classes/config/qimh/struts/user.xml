<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
    "http://struts.apache.org/dtds/struts-2.3.dtd">
    
<struts>

	<!-- extends 必须写，直接或者间接继承struts-default name自定义 -->
	<!-- 包名称自定义 可以配置多个包；namespace 命名空间 不同模块可以指定不同的空间 -->
<package name="user" namespace="/user" extends="struts-default">
		<!-- name是url请求名称，不要写/ ;class是处理url请求对应的java类   class要求=包名+类名
			并且该类是由公共的无参构造方法，method配置处理请求类的处理方法，默认为execute  ;方法满足是公共的，返回值类型是string，无参
			method和name那么无关
		 -->
		<action name="login" class="com.qimh.LoginAction">
		<!-- result 是结果集  name值和对应的action中的方法的返回值匹配，默认是success-->
		<!-- result-指结果集
			 name：匹配请求处理方法返回的值，默认是success
			 type:结果处理类型 ，默认是dispatcher请求转发
			 type 有哪些：
			 <result-type name="chain" class="com.opensymphony.xwork2.ActionChainResult"/>
             <result-type name="dispatcher" class="org.apache.struts2.dispatcher.ServletDispatcherResult" default="true"/>
             <result-type name="freemarker" class="org.apache.struts2.views.freemarker.FreemarkerResult"/>
             <result-type name="httpheader" class="org.apache.struts2.dispatcher.HttpHeaderResult"/>
             <result-type name="redirect" class="org.apache.struts2.dispatcher.ServletRedirectResult"/>
             <result-type name="redirectAction" class="org.apache.struts2.dispatcher.ServletActionRedirectResult"/>
             <result-type name="stream" class="org.apache.struts2.dispatcher.StreamResult"/>
             <result-type name="velocity" class="org.apache.struts2.dispatcher.VelocityResult"/>
             <result-type name="xslt" class="org.apache.struts2.views.xslt.XSLTResult"/>
             <result-type name="plainText" class="org.apache.struts2.dispatcher.PlainTextResult" />
             <result-type name="postback" class="org.apache.struts2.dispatcher.PostbackResult" />
             
             chain：指action链，链接下一个action，执行actionA以后直接执行actionB后执行actionC，用的较少 ，地址栏是请求的第一action
                                案例：<result type = "chain" name = "success">loginOut</result>
             ***dispatcher：转发，和servlet一致，如果request中有数据要到视图中显示，那么使用dispatcher
                                案例：<result type = "dispatcher" name = "success">/success.jsp</result>
             ***redirect：重定向，如果是重定向到jsp页面，可以直接重定向，如果是重定向到另外一个action，
             			    需注意，是否配置的action的后缀名，如果要求有后缀名，那么重定向的action一定要加上后缀名
                               案例：<result type = "redirect" name = "success">loginOut</result>
            ***redirectAction：重定向到另外一个action，不用加action的后缀，他会将前一个action的后缀名自动加上
                              案例：<result type = "redirectAction" name = "success">loginOut</result>
            ***stream：以流的形式显示   ，文件下载
                                
		-->
		<result type = "redirectAction" name = "success">loginOut</result>
		<result name = "failed">/login.jsp</result>
		</action>
		<!-- name是url请求名称，不要写/ ;class对应action完全限定名=包名+类名 -->
		<action name="loginOut" class="com.qimh.LoginAction" method="loginOut">
		<!-- result 是结果集  name值和对应的action中的方法的返回值匹配，默认是success-->
		<result name = "success">/index.jsp</result>
		</action>
		
		 <!-- name是url请求名称，不要写/ ;class对应action完全限定名=包名+类名 -->
		<action name="add" class="com.qimh.AddAction" method="">
		<!-- result 是结果集  name值和对应的action中的方法的返回值匹配，默认是success-->
		<result name = "success">/index.jsp</result>
		</action>
		
</package>



</struts>